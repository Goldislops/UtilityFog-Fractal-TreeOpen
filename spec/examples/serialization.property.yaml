# Property-Based Specification for Serialization Roundtrip
# Validates the fundamental property: serialize ∘ deserialize = identity

spec_version: "1.0"
kind: property
name: serialization_roundtrip
description: "Property-based specification ensuring serialization roundtrip fidelity"

property:
  name: serialize_deserialize_identity
  description: "For any serializable object, deserializing its serialization yields the original object"
  
  mathematical_expression: "∀x ∈ Serializable: deserialize(serialize(x)) = x"
  
  implementation:
    language: python
    function: |
      def test_roundtrip_property(obj):
          serialized = serialize(obj)
          deserialized = deserialize(serialized)
          return obj == deserialized

generators:
  - name: fractal_tree_states
    type: object
    description: "Generate various FractalTree state configurations"
    properties:
      depth: 
        type: integer
        range: [0, 8]
      branch_angle:
        type: float
        range: [15.0, 90.0]
      scale_factor:
        type: float
        range: [0.3, 0.8]
      foglet_positions:
        type: array
        element_type: vector3
        size_range: [0, 100]
        
  - name: foglet_agent_data
    type: object
    description: "Generate foglet agent state data"
    properties:
      agent_id:
        type: string
        pattern: "^foglet_[0-9a-f]{8}$"
      position:
        type: vector3
        bounds: [[-100, -100, -100], [100, 100, 100]]
      velocity:
        type: vector3
        magnitude_range: [0.0, 10.0]
      connections:
        type: array
        element_type: string
        size_range: [0, 8]
      state:
        type: enum
        values: ["idle", "moving", "connecting", "disconnecting"]

test_cases:
  - name: fractal_tree_roundtrip
    generator: fractal_tree_states
    iterations: 100
    property: serialize_deserialize_identity
    
  - name: foglet_agent_roundtrip
    generator: foglet_agent_data
    iterations: 200
    property: serialize_deserialize_identity
    
  - name: empty_state_roundtrip
    input: {}
    property: serialize_deserialize_identity
    
  - name: large_dataset_roundtrip
    generator: fractal_tree_states
    size_multiplier: 1000
    iterations: 10
    property: serialize_deserialize_identity
    timeout_ms: 5000

validation_rules:
  - name: type_preservation
    description: "Object types must be preserved through serialization"
    check: "type(original) == type(deserialized)"
    
  - name: structure_preservation
    description: "Object structure and nested properties must be preserved"
    check: "deep_compare_structure(original, deserialized)"
    
  - name: precision_preservation
    description: "Floating-point precision must be maintained within tolerance"
    check: "all_floats_within_tolerance(original, deserialized, 1e-10)"

performance_constraints:
  - name: serialization_speed
    constraint: "serialize_time_ms <= object_size_kb * 0.1"
    description: "Serialization time scales linearly with object size"
    
  - name: deserialization_speed
    constraint: "deserialize_time_ms <= serialized_size_kb * 0.15"
    description: "Deserialization time scales linearly with serialized size"
    
  - name: memory_efficiency
    constraint: "serialized_size_bytes <= original_size_bytes * 1.5"
    description: "Serialized representation should not exceed 150% of original size"
