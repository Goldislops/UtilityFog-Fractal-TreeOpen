
name: "PyPI Publish"

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: true
        type: boolean

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Create setup.py
      run: |
        cat > setup.py << 'EOF'
        from setuptools import setup, find_packages
        import os
        
        # Read README for long description
        with open("README.md", "r", encoding="utf-8") as fh:
            long_description = fh.read()
        
        setup(
            name="utilityfog-fractal-tree",
            version="0.1.0",
            author="Goldislops",
            description="A fractal tree coordination system with agent-based messaging",
            long_description=long_description,
            long_description_content_type="text/markdown",
            url="https://github.com/Goldislops/UtilityFog-Fractal-TreeOpen",
            packages=find_packages(),
            classifiers=[
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.12",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: System :: Distributed Computing",
            ],
            python_requires=">=3.9",
            install_requires=[
                "plotly>=5.0.0",
                "pandas>=1.3.0",
                "numpy>=1.21.0",
                "networkx>=2.6.0",
            ],
            extras_require={
                "dev": [
                    "pytest>=7.0.0",
                    "pytest-cov>=4.0.0",
                    "ruff>=0.1.0",
                    "mypy>=1.0.0",
                ],
            },
            entry_points={
                "console_scripts": [
                    "ufog-diagnose=utilityfog_frontend.cli_viz.cli:main",
                    "ufog-visualize=utilityfog_frontend.cli_viz.cli:visualize_demo",
                ],
            },
            include_package_data=True,
            package_data={
                "": ["*.md", "*.txt", "*.yml", "*.yaml"],
            },
        )
        EOF

    - name: Build package
      run: python -m build

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: ${{ inputs.test_pypi || github.event_name == 'workflow_dispatch' }}
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/utilityfog-fractal-tree

    permissions:
      id-token: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  # COMMENTED OUT FOR SAFETY - Uncomment when ready for production PyPI
  # publish-to-pypi:
  #   name: Publish to PyPI
  #   if: github.event_name == 'release' && github.event.action == 'published'
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/utilityfog-fractal-tree
  #   
  #   permissions:
  #     id-token: write
  #   
  #   steps:
  #   - name: Download artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: python-package-distributions
  #       path: dist/
  #   
  #   - name: Publish to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
